{"ast":null,"code":"import { takeEvery, call } from '@redux-saga/core/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fecthCollectionsSuccess, fecthCollectionsFailure } from './shop.actions';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  yield console.log('FIREE');\n  const collectionRef = firestore.collection('collections');\n  const snapshot = yield collectionRef.get(); //comes as a promise\n\n  const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot); //CALL invokes function and resp params\n  // collectionRef\n  //   .get()\n  //   .then(async (snapshot) => {\n  //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  //     dispatch(fecthCollectionsSuccess(collectionsMap));\n  //   })\n  //   .catch((error) => dispatch(fecthCollectionsFailure(error.message)));\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FECTH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["C:/Users/Scott Daniel/Desktop/web_dev/react/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","firestore","convertCollectionsSnapshotToMap","fecthCollectionsSuccess","fecthCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","fetchCollectionsStart","FECTH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,QAAgC,0BAAhC;AAEA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAKA,SACEC,uBADF,EAEEC,uBAFF,QAGO,gBAHP;AAKA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMC,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAN;AAEA,QAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AACA,QAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB,CAJuC,CAIK;;AAC5C,QAAMC,cAAc,GAAG,MAAMb,IAAI,CAACE,+BAAD,EAAkCS,QAAlC,CAAjC,CALuC,CAKuC;AAE9E;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AAED,OAAO,UAAUG,qBAAV,GAAkC;AACvC,QAAMf,SAAS,CACbM,eAAe,CAACU,uBADH,EAEbT,qBAFa,CAAf;AAID","sourcesContent":["import { takeEvery, call } from '@redux-saga/core/effects';\r\n\r\nimport {\r\n  firestore,\r\n  convertCollectionsSnapshotToMap,\r\n} from '../../firebase/firebase.utils';\r\n\r\nimport {\r\n  fecthCollectionsSuccess,\r\n  fecthCollectionsFailure,\r\n} from './shop.actions';\r\n\r\nimport ShopActionTypes from './shop.types';\r\n\r\nexport function* fetchCollectionsAsync() {\r\n  yield console.log('FIREE');\r\n\r\n  const collectionRef = firestore.collection('collections');\r\n  const snapshot = yield collectionRef.get(); //comes as a promise\r\n  const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot); //CALL invokes function and resp params\r\n\r\n  // collectionRef\r\n  //   .get()\r\n  //   .then(async (snapshot) => {\r\n  //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n  //     dispatch(fecthCollectionsSuccess(collectionsMap));\r\n  //   })\r\n  //   .catch((error) => dispatch(fecthCollectionsFailure(error.message)));\r\n}\r\n\r\nexport function* fetchCollectionsStart() {\r\n  yield takeEvery(\r\n    ShopActionTypes.FECTH_COLLECTIONS_START,\r\n    fetchCollectionsAsync\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}